<tool id="gem_phenotype_phase_plane" name="Phenotype phase plane (PhPP)" version="@VERSION@">
    <macros>
        <import>gem_macros.xml</import>
    </macros>
    <description> Form a production envelope for the model with the given reactions.
    This sequentially constraints the fluxes of the given reactions and calculates the value of the objective for the
    given constraints. It returns a CSV file.
    </description>
    <requirements>
        <expand macro="requirement_cobra"/>
        <expand macro="requirement_pandas"/>
    </requirements>
    <expand macro="version_command_cobra"/>
    <command>
      python '$__tool_directory__/gem_phenotype_phase_plane.py'
      '--cb_model_location' '${cb_model_location}'
      '--output_csv' '${output_csv}'
      '--reaction1' '${reaction1}'
      '--reaction2' '${reaction2}'
      '--points' '${points}'
      '--objective' '${objective}'
      '--uptake_constraints_file' '${uptake_constraints_file}'
    </command>
    <inputs>
        <expand macro="input_model"/>
        <param name="reaction1" type="text" label="First reaction to calculate phenotype phase plane (PhPP) for" 
               value="" optional="false" help="Must be a valid reaction ID from the model"/>
        <param name="reaction2" type="text" label="Second reaction to calculate phenotype phase plane (PhPP) for"
               value="" optional="false" help="Must be a valid reaction ID from the model"/>
        <param name="points" type="integer" value="10" min="2" max="100"
               label="Number of points (for each reaction) to calculate phenotype phase plane (PhPP) for"/>
        <param format="txt" name="objective" type="text" label="Objective to use for PhPP (defaults to what's in the model)" optional="true"/>
        <expand macro="input_uptake_constraints"/>
    </inputs>
    <outputs>
        <data name="output_csv" format="csv" label="PhPP results"/>
    </outputs>
    <tests>
      <!-- Test 1: Test with default parameters -->
      <test>
        <param name="cb_model_location" value="textbook_model_cobrapy.xml"/>
        <param name="reaction1" value="EX_glc__D_e"/>
        <param name="reaction2" value="EX_o2_e"/>
        <param name="points" value="3"/>
        <output name="output_csv" value="test_output_1.csv"/>
      </test>
      <!-- Test 2: Test with uptake constraints -->
      <test>
        <param name="cb_model_location" value="textbook_model_cobrapy.xml"/>
        <param name="reaction1" value="EX_glc__D_e"/>
        <param name="reaction2" value="EX_o2_e"/>
        <param name="points" value="3"/>
        <param name="uptake_constraints_file" value="textbook_model_cobrapy_exchange.csv"/>
        <output name="output_csv" value="test_output_2.csv"/>
      </test>
      <expand macro="test_invalid_model"/>
    </tests>
    <help><![CDATA[
      Phenotype Phase Plane (PhPP) Analysis

      This tool performs a Phenotype Phase Plane (PhPP) analysis on a Genome-scale Metabolic Model (GEM). The PhPP analysis helps visualize how different combinations of two reaction fluxes affect the model's objective function (typically growth rate or product formation).

      Input Parameters
      ---------------
      * **Model file**: A GEM in SBML format (.xml)
      * **First reaction**: The ID of the first reaction to vary (e.g., "EX_glc__D_e" for glucose exchange)
      * **Second reaction**: The ID of the second reaction to vary (e.g., "EX_o2_e" for oxygen exchange)
      * **Number of points**: How many points to calculate for each reaction (higher numbers give smoother results but take longer)
      * **Objective**: (Optional) Specify a different objective function than the model default
      * **Uptake constraints**: (Optional) CSV file containing additional flux constraints

      Output
      ------
      The tool produces a CSV file containing:
      * Values for the first reaction flux
      * Values for the second reaction flux
      * Corresponding objective function values

      Common Issues
      ------------
      * Ensure reaction IDs exactly match those in your model
      * Verify that your model is properly constrained
      * Check that the reactions you selected can carry flux
      * Large number of points will increase computation time

    ]]></help>
    <citations>
        <expand macro="citation_pandas"/>
        <expand macro="citation_cobrapy"/>
    </citations>
</tool>